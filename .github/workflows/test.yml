name: Test
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "LICENSE"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "LICENSE"
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      # TODO: test more python versions
      max-parallel: 2
      matrix:
        include:
        - python-version: 3.7
          tox-env: py37
        - python-version: 3.8
          tox-env: py38
        - python-version: 3.9
          tox-env: py39,docs
        - python-version: '3.10'
          tox-env: py310

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Run tests
        run: |
          tox -e setup,${{ matrix.tox-env }},report

  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Check linters
        run: |
          tox -e lint
